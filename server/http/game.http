@url = http://localhost:8080/api/game

# [ ] get all games

GET http://localhost:8080/api/game HTTP/1.1

### [ ] return game by id

GET http://localhost:8080/api/game/2 HTTP/1.1

### [ ] failed return game by id

GET http://localhost:8080/api/game/5000 HTTP/1.1

### [ ] post game

POST http://localhost:8080/api/game HTTP/1.1
Content-Type: application/json

{
    "title": "Dota 2",
    "releaseDate": "2013-07-09",
    "developer": "Valve",
    "score": 91,
    "mediaId": 5,
    "genre": "Action",
    "platforms": [
      {
        "platformId": 4,
        "name": "PC"
      }]
}

### [ ] return 400 duplicate game

POST http://localhost:8080/api/game HTTP/1.1
Content-Type: application/json

{
    "title": "Dota 2",
    "releaseDate": "2013-07-09",
    "developer": "Valve",
    "score": 91,
    "mediaId": 5,
    "genre": "Action",
    "platforms": [
      {
        "platformId": 4,
        "name": "PC"
      }]
}

### [ ] return 400 if game empty

POST http://localhost:8080/api/game HTTP/1.1
Content-Type: application/json

{

}

### [ ] gameId cannot be set

POST http://localhost:8080/api/game HTTP/1.1
Content-Type: application/json

{
    "gameId": 7,
    "title": "asknf",
    "releaseDate": "2013-07-09",
    "developer": "Valve",
    "score": 91,
    "mediaId": 5,
    "genre": "Action",
    "platforms": [
      {
        "platformId": 4,
        "name": "PC"
      }]
}

### [ ] Media post request for game MUST DO AFTER POST GAME

POST http://localhost:8080/api/media HTTP/1.1
Content-Type: application/json

{
    "image_url": "https://img.opencritic.com/game/9901/o/RF8OedUr.jpg",
    "trailer_url": "https://youtube.com/watch?v=lEHZ_wUB9eg"
}